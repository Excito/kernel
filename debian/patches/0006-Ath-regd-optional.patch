From: =?UTF-8?q?Carl=20F=C3=BCrstenberg?= <azatoth@gmail.com>
Date: Wed, 1 Jun 2011 16:39:33 +0200
Subject: Ath regd optional

Make the reg db optional
---
 drivers/net/wireless/ath/Kconfig |   10 ++++++++++
 drivers/net/wireless/ath/regd.c  |   16 ++++++++++++++++
 2 files changed, 26 insertions(+), 0 deletions(-)

diff --git a/drivers/net/wireless/ath/Kconfig b/drivers/net/wireless/ath/Kconfig
index 92c2162..c190d87 100644
--- a/drivers/net/wireless/ath/Kconfig
+++ b/drivers/net/wireless/ath/Kconfig
@@ -16,6 +16,16 @@ menuconfig ATH_COMMON
 
 if ATH_COMMON
 
+config ATH_USER_REGD
+	bool "Force Atheros drivers to respect the user's regdomain settings"
+	---help---
+	  Atheros' idea of regulatory handling is that the EEPROM of the card defines
+	  the regulatory limits and the user is only allowed to restrict the settings
+	  even further, even if the country allows frequencies or power levels that
+
+	  Select this option if you want the driver to respect the user's decision about
+	  regulatory settings.
+
 config ATH_DEBUG
 	bool "Atheros wireless debugging"
 	---help---
diff --git a/drivers/net/wireless/ath/regd.c b/drivers/net/wireless/ath/regd.c
index 0e1b879..b9e9ae6 100644
--- a/drivers/net/wireless/ath/regd.c
+++ b/drivers/net/wireless/ath/regd.c
@@ -192,6 +192,10 @@ ath_reg_apply_beaconing_flags(struct wiphy *wiphy,
 	u32 bandwidth = 0;
 	int r;
 
+#ifdef ATH_USER_REGD
+	return;
+#endif
+
 	for (band = 0; band < IEEE80211_NUM_BANDS; band++) {
 
 		if (!wiphy->bands[band])
@@ -251,6 +255,10 @@ ath_reg_apply_active_scan_flags(struct wiphy *wiphy,
 	u32 bandwidth = 0;
 	int r;
 
+#ifdef ATH_USER_REGD
+	return;
+#endif
+
 	sband = wiphy->bands[IEEE80211_BAND_2GHZ];
 
 	/*
@@ -298,6 +306,10 @@ static void ath_reg_apply_radar_flags(struct wiphy *wiphy)
 	struct ieee80211_channel *ch;
 	unsigned int i;
 
+#ifdef ATH_USER_REGD
+	return;
+#endif
+
 	if (!wiphy->bands[IEEE80211_BAND_5GHZ])
 		return;
 
@@ -464,6 +476,10 @@ ath_regd_init_wiphy(struct ath_regulatory *reg,
 {
 	const struct ieee80211_regdomain *regd;
 
+#ifdef ATH_USER_REGD
+	return 0;
+#endif
+
 	wiphy->reg_notifier = reg_notifier;
 	wiphy->flags |= WIPHY_FLAG_STRICT_REGULATORY;
 
-- 
